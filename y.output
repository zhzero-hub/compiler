Terminals unused in grammar

   '+'
   '-'
   '*'
   '/'


Grammar

    0 $accept: program $end

    1 program: declarationList

    2 declarationList: declarationList declaration
    3                | declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type _id SC
    7                | type _id LBRACK _num RBRACK SC

    8 type: INT
    9     | VOID

   10 fun_declaration: type _id LP params RP compound_stmt

   11 params: param_list
   12       | VOID

   13 param_list: param_list CM param
   14           | param

   15 param: type _id
   16      | type _id LBRACK RBRACK

   17 compound_stmt: LBRACE local_declarations statement_list RBRACE

   18 local_declarations: local_declarations var_declaration
   19                   | %empty

   20 statement_list: statement_list statement
   21               | %empty

   22 statement: expression_stmt
   23          | compound_stmt
   24          | selection_stmt
   25          | iteration_stmt
   26          | return_stmt

   27 expression_stmt: expression SC
   28                | SC

   29 selection_stmt: IF LP expression RP statement
   30               | IF LP expression RP statement ELSE statement

   31 iteration_stmt: WHILE LP expression RP statement

   32 return_stmt: RETURN SC
   33            | RETURN expression SC

   34 expression: var ASSIGN expression
   35           | simple_expression

   36 var: _id
   37    | _id LBRACK expression RBRACK

   38 simple_expression: additive_expression relop additive_expression
   39                  | additive_expression

   40 relop: LT
   41      | LE
   42      | GT
   43      | GE
   44      | EQ
   45      | NE

   46 additive_expression: additive_expression addop term
   47                    | term

   48 addop: ADD
   49      | MINUS

   50 term: term mulop factor
   51     | factor

   52 mulop: MULTIPLY
   53      | DIVIDE

   54 factor: LP expression RP
   55       | var
   56       | call
   57       | _num

   58 call: _id LP args RP

   59 args: arg_list
   60     | %empty

   61 arg_list: arg_list CM expression
   62         | expression

   63 _id: ID

   64 _num: NUM


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
'-' (45)
'/' (47)
error (256)
ELSE (258) 30
IF (259) 29 30
INT (260) 8
RETURN (261) 32 33
VOID (262) 9 12
WHILE (263) 31
ADD (264) 48
MINUS (265) 49
MULTIPLY (266) 52
DIVIDE (267) 53
LT (268) 40
LE (269) 41
GT (270) 42
GE (271) 43
EQ (272) 44
NE (273) 45
ID (274) 63
NUM (275) 64
ASSIGN (276) 34
SC (277) 6 7 27 28 32 33
CM (278) 13 61
LP (279) 10 29 30 31 54 58
RP (280) 10 29 30 31 54 58
LBRACK (281) 7 16 37
RBRACK (282) 7 16 37
LBRACE (283) 17
RBRACE (284) 17
LOWER_ELSE (285)


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
declarationList (37)
    on left: 2 3, on right: 1 2
declaration (38)
    on left: 4 5, on right: 2 3
var_declaration (39)
    on left: 6 7, on right: 4 18
type (40)
    on left: 8 9, on right: 6 7 10 15 16
fun_declaration (41)
    on left: 10, on right: 5
params (42)
    on left: 11 12, on right: 10
param_list (43)
    on left: 13 14, on right: 11 13
param (44)
    on left: 15 16, on right: 13 14
compound_stmt (45)
    on left: 17, on right: 10 23
local_declarations (46)
    on left: 18 19, on right: 17 18
statement_list (47)
    on left: 20 21, on right: 17 20
statement (48)
    on left: 22 23 24 25 26, on right: 20 29 30 31
expression_stmt (49)
    on left: 27 28, on right: 22
selection_stmt (50)
    on left: 29 30, on right: 24
iteration_stmt (51)
    on left: 31, on right: 25
return_stmt (52)
    on left: 32 33, on right: 26
expression (53)
    on left: 34 35, on right: 27 29 30 31 33 34 37 54 61 62
var (54)
    on left: 36 37, on right: 34 55
simple_expression (55)
    on left: 38 39, on right: 35
relop (56)
    on left: 40 41 42 43 44 45, on right: 38
additive_expression (57)
    on left: 46 47, on right: 38 39 46
addop (58)
    on left: 48 49, on right: 46
term (59)
    on left: 50 51, on right: 46 47 50
mulop (60)
    on left: 52 53, on right: 50
factor (61)
    on left: 54 55 56 57, on right: 50 51
call (62)
    on left: 58, on right: 56
args (63)
    on left: 59 60, on right: 58
arg_list (64)
    on left: 61 62, on right: 59 61
_id (65)
    on left: 63, on right: 6 7 10 15 16 36 37 58
_num (66)
    on left: 64, on right: 7 57


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program          go to state 3
    declarationList  go to state 4
    declaration      go to state 5
    var_declaration  go to state 6
    type             go to state 7
    fun_declaration  go to state 8


State 1

    8 type: INT .

    $default  reduce using rule 8 (type)


State 2

    9 type: VOID .

    $default  reduce using rule 9 (type)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: declarationList .
    2 declarationList: declarationList . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    declaration      go to state 10
    var_declaration  go to state 6
    type             go to state 7
    fun_declaration  go to state 8


State 5

    3 declarationList: declaration .

    $default  reduce using rule 3 (declarationList)


State 6

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 7

    6 var_declaration: type . _id SC
    7                | type . _id LBRACK _num RBRACK SC
   10 fun_declaration: type . _id LP params RP compound_stmt

    ID  shift, and go to state 11

    _id  go to state 12


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 declarationList: declarationList declaration .

    $default  reduce using rule 2 (declarationList)


State 11

   63 _id: ID .

    $default  reduce using rule 63 (_id)


State 12

    6 var_declaration: type _id . SC
    7                | type _id . LBRACK _num RBRACK SC
   10 fun_declaration: type _id . LP params RP compound_stmt

    SC      shift, and go to state 13
    LP      shift, and go to state 14
    LBRACK  shift, and go to state 15


State 13

    6 var_declaration: type _id SC .

    $default  reduce using rule 6 (var_declaration)


State 14

   10 fun_declaration: type _id LP . params RP compound_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 16

    type        go to state 17
    params      go to state 18
    param_list  go to state 19
    param       go to state 20


State 15

    7 var_declaration: type _id LBRACK . _num RBRACK SC

    NUM  shift, and go to state 21

    _num  go to state 22


State 16

    9 type: VOID .
   12 params: VOID .

    RP        reduce using rule 12 (params)
    $default  reduce using rule 9 (type)


State 17

   15 param: type . _id
   16      | type . _id LBRACK RBRACK

    ID  shift, and go to state 11

    _id  go to state 23


State 18

   10 fun_declaration: type _id LP params . RP compound_stmt

    RP  shift, and go to state 24


State 19

   11 params: param_list .
   13 param_list: param_list . CM param

    CM  shift, and go to state 25

    $default  reduce using rule 11 (params)


State 20

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 21

   64 _num: NUM .

    $default  reduce using rule 64 (_num)


State 22

    7 var_declaration: type _id LBRACK _num . RBRACK SC

    RBRACK  shift, and go to state 26


State 23

   15 param: type _id .
   16      | type _id . LBRACK RBRACK

    LBRACK  shift, and go to state 27

    $default  reduce using rule 15 (param)


State 24

   10 fun_declaration: type _id LP params RP . compound_stmt

    LBRACE  shift, and go to state 28

    compound_stmt  go to state 29


State 25

   13 param_list: param_list CM . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type   go to state 17
    param  go to state 30


State 26

    7 var_declaration: type _id LBRACK _num RBRACK . SC

    SC  shift, and go to state 31


State 27

   16 param: type _id LBRACK . RBRACK

    RBRACK  shift, and go to state 32


State 28

   17 compound_stmt: LBRACE . local_declarations statement_list RBRACE

    $default  reduce using rule 19 (local_declarations)

    local_declarations  go to state 33


State 29

   10 fun_declaration: type _id LP params RP compound_stmt .

    $default  reduce using rule 10 (fun_declaration)


State 30

   13 param_list: param_list CM param .

    $default  reduce using rule 13 (param_list)


State 31

    7 var_declaration: type _id LBRACK _num RBRACK SC .

    $default  reduce using rule 7 (var_declaration)


State 32

   16 param: type _id LBRACK RBRACK .

    $default  reduce using rule 16 (param)


State 33

   17 compound_stmt: LBRACE local_declarations . statement_list RBRACE
   18 local_declarations: local_declarations . var_declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 21 (statement_list)

    var_declaration  go to state 34
    type             go to state 35
    statement_list   go to state 36


State 34

   18 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 18 (local_declarations)


State 35

    6 var_declaration: type . _id SC
    7                | type . _id LBRACK _num RBRACK SC

    ID  shift, and go to state 11

    _id  go to state 37


State 36

   17 compound_stmt: LBRACE local_declarations statement_list . RBRACE
   20 statement_list: statement_list . statement

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    SC      shift, and go to state 41
    LP      shift, and go to state 42
    LBRACE  shift, and go to state 28
    RBRACE  shift, and go to state 43

    compound_stmt        go to state 44
    statement            go to state 45
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 37

    6 var_declaration: type _id . SC
    7                | type _id . LBRACK _num RBRACK SC

    SC      shift, and go to state 13
    LBRACK  shift, and go to state 15


State 38

   29 selection_stmt: IF . LP expression RP statement
   30               | IF . LP expression RP statement ELSE statement

    LP  shift, and go to state 59


State 39

   32 return_stmt: RETURN . SC
   33            | RETURN . expression SC

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    SC   shift, and go to state 60
    LP   shift, and go to state 42

    expression           go to state 61
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 40

   31 iteration_stmt: WHILE . LP expression RP statement

    LP  shift, and go to state 62


State 41

   28 expression_stmt: SC .

    $default  reduce using rule 28 (expression_stmt)


State 42

   54 factor: LP . expression RP

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    expression           go to state 63
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 43

   17 compound_stmt: LBRACE local_declarations statement_list RBRACE .

    $default  reduce using rule 17 (compound_stmt)


State 44

   23 statement: compound_stmt .

    $default  reduce using rule 23 (statement)


State 45

   20 statement_list: statement_list statement .

    $default  reduce using rule 20 (statement_list)


State 46

   22 statement: expression_stmt .

    $default  reduce using rule 22 (statement)


State 47

   24 statement: selection_stmt .

    $default  reduce using rule 24 (statement)


State 48

   25 statement: iteration_stmt .

    $default  reduce using rule 25 (statement)


State 49

   26 statement: return_stmt .

    $default  reduce using rule 26 (statement)


State 50

   27 expression_stmt: expression . SC

    SC  shift, and go to state 64


State 51

   34 expression: var . ASSIGN expression
   55 factor: var .

    ASSIGN  shift, and go to state 65

    $default  reduce using rule 55 (factor)


State 52

   35 expression: simple_expression .

    $default  reduce using rule 35 (expression)


State 53

   38 simple_expression: additive_expression . relop additive_expression
   39                  | additive_expression .
   46 additive_expression: additive_expression . addop term

    ADD    shift, and go to state 66
    MINUS  shift, and go to state 67
    LT     shift, and go to state 68
    LE     shift, and go to state 69
    GT     shift, and go to state 70
    GE     shift, and go to state 71
    EQ     shift, and go to state 72
    NE     shift, and go to state 73

    $default  reduce using rule 39 (simple_expression)

    relop  go to state 74
    addop  go to state 75


State 54

   47 additive_expression: term .
   50 term: term . mulop factor

    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77

    $default  reduce using rule 47 (additive_expression)

    mulop  go to state 78


State 55

   51 term: factor .

    $default  reduce using rule 51 (term)


State 56

   56 factor: call .

    $default  reduce using rule 56 (factor)


State 57

   36 var: _id .
   37    | _id . LBRACK expression RBRACK
   58 call: _id . LP args RP

    LP      shift, and go to state 79
    LBRACK  shift, and go to state 80

    $default  reduce using rule 36 (var)


State 58

   57 factor: _num .

    $default  reduce using rule 57 (factor)


State 59

   29 selection_stmt: IF LP . expression RP statement
   30               | IF LP . expression RP statement ELSE statement

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    expression           go to state 81
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 60

   32 return_stmt: RETURN SC .

    $default  reduce using rule 32 (return_stmt)


State 61

   33 return_stmt: RETURN expression . SC

    SC  shift, and go to state 82


State 62

   31 iteration_stmt: WHILE LP . expression RP statement

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    expression           go to state 83
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 63

   54 factor: LP expression . RP

    RP  shift, and go to state 84


State 64

   27 expression_stmt: expression SC .

    $default  reduce using rule 27 (expression_stmt)


State 65

   34 expression: var ASSIGN . expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    expression           go to state 85
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 66

   48 addop: ADD .

    $default  reduce using rule 48 (addop)


State 67

   49 addop: MINUS .

    $default  reduce using rule 49 (addop)


State 68

   40 relop: LT .

    $default  reduce using rule 40 (relop)


State 69

   41 relop: LE .

    $default  reduce using rule 41 (relop)


State 70

   42 relop: GT .

    $default  reduce using rule 42 (relop)


State 71

   43 relop: GE .

    $default  reduce using rule 43 (relop)


State 72

   44 relop: EQ .

    $default  reduce using rule 44 (relop)


State 73

   45 relop: NE .

    $default  reduce using rule 45 (relop)


State 74

   38 simple_expression: additive_expression relop . additive_expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    var                  go to state 86
    additive_expression  go to state 87
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 75

   46 additive_expression: additive_expression addop . term

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    var     go to state 86
    term    go to state 88
    factor  go to state 55
    call    go to state 56
    _id     go to state 57
    _num    go to state 58


State 76

   52 mulop: MULTIPLY .

    $default  reduce using rule 52 (mulop)


State 77

   53 mulop: DIVIDE .

    $default  reduce using rule 53 (mulop)


State 78

   50 term: term mulop . factor

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    var     go to state 86
    factor  go to state 89
    call    go to state 56
    _id     go to state 57
    _num    go to state 58


State 79

   58 call: _id LP . args RP

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    $default  reduce using rule 60 (args)

    expression           go to state 90
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    args                 go to state 91
    arg_list             go to state 92
    _id                  go to state 57
    _num                 go to state 58


State 80

   37 var: _id LBRACK . expression RBRACK

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    expression           go to state 93
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 81

   29 selection_stmt: IF LP expression . RP statement
   30               | IF LP expression . RP statement ELSE statement

    RP  shift, and go to state 94


State 82

   33 return_stmt: RETURN expression SC .

    $default  reduce using rule 33 (return_stmt)


State 83

   31 iteration_stmt: WHILE LP expression . RP statement

    RP  shift, and go to state 95


State 84

   54 factor: LP expression RP .

    $default  reduce using rule 54 (factor)


State 85

   34 expression: var ASSIGN expression .

    $default  reduce using rule 34 (expression)


State 86

   55 factor: var .

    $default  reduce using rule 55 (factor)


State 87

   38 simple_expression: additive_expression relop additive_expression .
   46 additive_expression: additive_expression . addop term

    ADD    shift, and go to state 66
    MINUS  shift, and go to state 67

    $default  reduce using rule 38 (simple_expression)

    addop  go to state 75


State 88

   46 additive_expression: additive_expression addop term .
   50 term: term . mulop factor

    MULTIPLY  shift, and go to state 76
    DIVIDE    shift, and go to state 77

    $default  reduce using rule 46 (additive_expression)

    mulop  go to state 78


State 89

   50 term: term mulop factor .

    $default  reduce using rule 50 (term)


State 90

   62 arg_list: expression .

    $default  reduce using rule 62 (arg_list)


State 91

   58 call: _id LP args . RP

    RP  shift, and go to state 96


State 92

   59 args: arg_list .
   61 arg_list: arg_list . CM expression

    CM  shift, and go to state 97

    $default  reduce using rule 59 (args)


State 93

   37 var: _id LBRACK expression . RBRACK

    RBRACK  shift, and go to state 98


State 94

   29 selection_stmt: IF LP expression RP . statement
   30               | IF LP expression RP . statement ELSE statement

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    SC      shift, and go to state 41
    LP      shift, and go to state 42
    LBRACE  shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 99
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 95

   31 iteration_stmt: WHILE LP expression RP . statement

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    SC      shift, and go to state 41
    LP      shift, and go to state 42
    LBRACE  shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 100
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 96

   58 call: _id LP args RP .

    $default  reduce using rule 58 (call)


State 97

   61 arg_list: arg_list CM . expression

    ID   shift, and go to state 11
    NUM  shift, and go to state 21
    LP   shift, and go to state 42

    expression           go to state 101
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 98

   37 var: _id LBRACK expression RBRACK .

    $default  reduce using rule 37 (var)


State 99

   29 selection_stmt: IF LP expression RP statement .
   30               | IF LP expression RP statement . ELSE statement

    ELSE  shift, and go to state 102

    $default  reduce using rule 29 (selection_stmt)


State 100

   31 iteration_stmt: WHILE LP expression RP statement .

    $default  reduce using rule 31 (iteration_stmt)


State 101

   61 arg_list: arg_list CM expression .

    $default  reduce using rule 61 (arg_list)


State 102

   30 selection_stmt: IF LP expression RP statement ELSE . statement

    IF      shift, and go to state 38
    RETURN  shift, and go to state 39
    WHILE   shift, and go to state 40
    ID      shift, and go to state 11
    NUM     shift, and go to state 21
    SC      shift, and go to state 41
    LP      shift, and go to state 42
    LBRACE  shift, and go to state 28

    compound_stmt        go to state 44
    statement            go to state 103
    expression_stmt      go to state 46
    selection_stmt       go to state 47
    iteration_stmt       go to state 48
    return_stmt          go to state 49
    expression           go to state 50
    var                  go to state 51
    simple_expression    go to state 52
    additive_expression  go to state 53
    term                 go to state 54
    factor               go to state 55
    call                 go to state 56
    _id                  go to state 57
    _num                 go to state 58


State 103

   30 selection_stmt: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 30 (selection_stmt)
